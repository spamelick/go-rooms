package game

import (
	"bufio"
	"fmt"
	"math/rand"
	"os"

	"github.com/fatih/color"
)

// –ò–≥—Ä–∞.
type game struct {
	seed   int
	room   room
	player player
}

func startGame() {
	game := NewGame()

	color.Cyan("–í—ã –≤—Ö–æ–¥–∏—Ç–µ –≤ üè∞. –û–±—Ä–∞—Ç–Ω–æ–π –¥–æ—Ä–æ–≥–∏ –Ω–µ—Ç...")

	game.start()

	color.Red("üíÄ –í–æ—Ç –∏ —Å–∫–∞–∑–æ—á–∫–µ –∫–æ–Ω–µ—Ü.")
	fmt.Println()
}

func confirmStartGame() {
	reader := bufio.NewReader(os.Stdin)
	input("–ù–∞—á–∏–Ω–∞–µ–º?", reader)
	fmt.Println()
	startGame()
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã.
// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω seed –∏–≥—Ä—ã, —Ç–æ... —Å–æ–∑–¥–∞–µ–º —Å —Å–∏–¥–æ–º.
func NewGame(seed ...int) game {
	if len(seed) == 1 {
		return loadGame(seed[0])
	}

	player := NewPlayer(5, 2)

	g := game{
		seed:   rand.Int(),
		player: player,
	}

	return g
}

// –ù–∞—á–∞—Ç—å –∏–≥—Ä—É.
func (g *game) start() {
	for g.player.isAlive() {
		fmt.Println()
		g.startNextRoom()
	}
}

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–ª–µ–¥. –∫–æ–º–Ω–∞—Ç—ã.
// –õ–∏–±–æ –ø–µ—Ä–≤–æ–π, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—É—â–µ–π.
func (g *game) startNextRoom() {
	g.room = NewRoom(g.getNextRoomNumber())
	fmt.Println("-------------------")
	fmt.Println(g.room)
	fmt.Println("-------------------")
	g.room.start(&g.player)
}

func (g game) getNextRoomNumber() uint {
	return g.room.number + 1
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
// –ü–æ–∫–∞ —Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–Ω—Ç–∞–∑–∏—è—Ö.
func loadGame(_ int) game {
	return NewGame()
}
